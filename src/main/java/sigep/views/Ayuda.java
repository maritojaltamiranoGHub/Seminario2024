
package main.java.sigep.views;


import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import main.java.sigep.model.dao.ProductosPOSDAO;
import main.java.sigep.model.entities.ProductosPOS;


/**
 *
 * @author marito
 */
public class Ayuda extends javax.swing.JDialog {
   
    private String result;
   
  
    /**
     * Creates new form Ayuda
     */
    public Ayuda(java.awt.Frame parent, boolean modal) {     
    
        super(parent, modal);
        initComponents();
        limpiarDatos();
        tfBusqueda.requestFocusInWindow();
    
        //Evento KeyListener a tfBusqueda
        tfBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfBusquedaKeyReleased(evt);
            }
        });
        
        //Evento KeyListener a tbResultado
        tbResultado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbResultadoKeyReleased(evt);
                
            }
        });
    }

    
    public String getResult() {
        return result;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbBusqueda = new javax.swing.JLabel();
        tfBusqueda = new javax.swing.JTextField();
        cbAvanzada = new javax.swing.JCheckBox();
        spResultado = new javax.swing.JScrollPane();
        tbResultado = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lbBusqueda.setText("Búsqueda");

        tfBusqueda.setToolTipText("Presione <Enter> para confirmar");
        tfBusqueda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfBusquedaFocusGained(evt);
            }
        });
        tfBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfBusquedaActionPerformed(evt);
            }
        });

        cbAvanzada.setText("Búsqueda Avanzada");

        tbResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Cod. Int.", "Cod. Barras", "Descripción", "Existencia", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        spResultado.setViewportView(tbResultado);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spResultado)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbBusqueda))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbAvanzada)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(lbBusqueda)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbAvanzada))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spResultado, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfBusquedaActionPerformed
         
    }//GEN-LAST:event_tfBusquedaActionPerformed

    private void tfBusquedaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfBusquedaFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_tfBusquedaFocusGained

    private void tfBusquedaKeyReleased(java.awt.event.KeyEvent evt) {                                     
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_ENTER:
                buscarArticulos();
                break;
            case KeyEvent.VK_ESCAPE:
                limpiarDatos();
                this.dispose();
                break;
        }
    }
    
    private void limpiarDatos() {
        DefaultTableModel model = (DefaultTableModel) tbResultado.getModel();
        model.setRowCount(0); // Clear all rows
        tfBusqueda.setText("");
    }
    
    private void buscarArticulos() {
        String textoBusqueda = tfBusqueda.getText();
        if (!tfBusqueda.getText().isEmpty()) {
                    List<ProductosPOS> articulos = ProductosPOSDAO.getArticulos(tfBusqueda.getText(), cbAvanzada.isSelected());
                    DefaultTableModel model = (DefaultTableModel) tbResultado.getModel();
                    model.setRowCount(0); // Limpio los resultados
                    
                    if (articulos.isEmpty()) {
                        JOptionPane.showMessageDialog(this, "No hay resultados para mostrar", "Alerta!", JOptionPane.ERROR_MESSAGE);
                    } else {
                        for (ProductosPOS articulo : articulos) {
                            model.addRow(articulo.toObject());
                        }
                        tbResultado.requestFocus();
                        tbResultado.setRowSelectionInterval(0, 0);
                    }
        }
    }

     
    private void tbResultadoKeyReleased(java.awt.event.KeyEvent evt) {                                        
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {    
            evt.consume();
            DefaultTableModel model = (DefaultTableModel) tbResultado.getModel();
            int row = tbResultado.getSelectedRow(); 

            if (row >= 0 && row < model.getRowCount()) {
                
                if (row >= 2) {
                    row = row - 1;  //Esto lo puse asi porque me saltaba al valor siguiente
                }
                int modelRow = tbResultado.convertRowIndexToModel(row);  
                result = (String) model.getValueAt(modelRow, 0); 
                limpiarDatos();
                this.dispose();  // Cierra el diálogo de ayuda
            }
        }
    }                                      

    private void formKeyPressed(java.awt.event.KeyEvent evt) {/*                                
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.dispose();
        }*/
    }                               

    private void tbResultadoKeyPressed(java.awt.event.KeyEvent evt) {  /*                                     
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            evt.consume();
        }*/
    } 
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbAvanzada;
    private javax.swing.JLabel lbBusqueda;
    private javax.swing.JScrollPane spResultado;
    private javax.swing.JTable tbResultado;
    private javax.swing.JTextField tfBusqueda;
    // End of variables declaration//GEN-END:variables
}
